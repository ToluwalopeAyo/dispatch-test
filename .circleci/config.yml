# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
    
  docker-build-and-publish:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Define-image-tag"
          command: | 
            echo 'export DOCKER_IMAGE_TAG="$(git describe --tags)"' >> $BASH_ENV
            source $BASH_ENV
            cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - "bash.env"
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          docker build -t tolulopeayo/ci-test:$DOCKER_IMAGE_TAG .
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker push tolulopeayo/ci-test:$DOCKER_IMAGE_TAG
  
  deploy-dev:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run: |
          cat bash.env >> $BASH_ENV
          printenv DOCKER_IMAGE_TAG

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - docker-build-and-publish